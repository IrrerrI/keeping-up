:root{
    --primary: oklch(0.9 0.17 100);
    --bg: oklch(0.1 0 264);
    --bg-level-one: oklch(0.15 0 264);
    --bg-level-two: oklch(0.2 0 264);
    --bg-level-three: oklch(0.3 0 264);

    --shadow-engraved: 
    inset 0 4px 2px oklch(0.1 0 264), 
    0 1px 2px #00000030,
    0 2px 0px var(--bg-level-three);
    --shadow-raised: 
    inset 0 1px 2px #ffffff50,
    0 4px 4px #00000030,
    0 8px 8px var(--bg-level-one);

    --font: "Karla", sans-serif;

        --text: oklch(0.96 0 264);
    --text-muted: oklch(0.76 0 264);
    
    --text: oklch(0.96 0 294);
    --text-muted: oklch(0.76 0 294);
    --highlight: oklch(0.5 0 294);
    --border: oklch(0.4 0 294);
    --border-muted: oklch(0.3 0 294);
    --primary: oklch(0.76 0.1 294);
    --secondary: oklch(0.76 0.1 114);
    --danger: oklch(0.7 0.05 30);
    --warning: oklch(0.7 0.05 100);
    --success: oklch(0.7 0.05 160);
    --info: oklch(0.7 0.05 260);

}

@layer reset {
    *, ::after, ::before {
        box-sizing: border-box;
        margin: 0;
        padding: 0;
    }

    body{
    background-color: var(--bg);
    color: var(--text);
    font-size: 1rem;
    font-family: var(--font);
    }
}

@layer topology {
   .one{
        background-color: var(--bg-level-one);
        box-shadow: var(--shadow-engraved);
    }

    .two{
        background-color: var(--bg-level-two);
        box-shadow: var(--shadow-raised);
    }

    .three{
        background-color: var(--bg-level-three);
        box-shadow: var(--shadow-raised);
    }
}

@layer utils{
    .small{
        grid-column: span 1;
    }

    .medium{
        grid-column: span 2;
    }

    .large{
        grid-column: span 3;
    }

}

.game{
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    gap: 1rem;
    height: 100vh;
    width: 100vw;
}

.health{
    width: 80vw;
    height: 30px;
    border-radius: 15px;
}

.board{
    display: grid;
    grid-template-rows: repeat(2, 1fr);
    height: 50vh;
    width: 90vw;
    padding: 1rem;
}

.enemy-side, .player-side{
    display: grid;
    grid-template-columns: repeat(8, 1fr);
}

.player-side{
    border-radius: 0 0 8px 8px;
}

/* expose corner variables on the shared container */
.game{
    --r-tl: 0px;
    --r-tr: 0px;
    --r-br: 8px;
    --r-bl: 8px;
}

/* reapply player-side using the variables (overrides earlier rule) */
.player-side{
    border-radius: var(--r-tl) var(--r-tr) var(--r-br) var(--r-bl);
}

/* enemy-side gets the inverse via calc (swaps the corners) */
.enemy-side{
    border-radius: calc(1 * var(--r-br)) calc(1 * var(--r-bl)) calc(1 * var(--r-tl)) calc(1 * var(--r-tr));
}

 .item-container{
        border-radius: 1rem;
        margin: 0.5rem;
        height: 90%;
        width: 90%;
        display: grid;
        place-items: center;
    }

    .item{
        margin: 0.2rem;
        height: 80%;
        width: 80%;
    }